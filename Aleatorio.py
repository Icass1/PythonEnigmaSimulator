from random import randrange, shuffle
from bisect import bisect, insort
from time import sleep
from typing import SupportsFloat

if True:
    string = """
    1	☺
    2	☻
    3	♥
    4	♦
    5	♣
    6	♠
    7	•
    8	◘
    ○	9
    ◙	10
    ♂	11
    ♀	12
    ♪	13
    ♫	14
    ☼	15
    ►	16

    
    17	◄
    18	↕
    19	‼
    20	¶
    21	§
    22	▬
    23	↨
    24	↑
    ↓	25
    →	26
    ←	27
    ∟	28
    ↔	29
    ▲	30
    ▼	31
     	32



    

    33	A
    34	"
    35	#
    36	$
    37	%
    38	&
    39	'
    40	(
    41	)
    42	*
    43	+
    44	,
    45	-
    46	.
    47	/
    48	0
    49	1
    50	2
    51	3
    52	4
    53	5
    54	6
    55	7
    56	8
    57	9
    58	:
    59	;
    60	<
    =	61
    >	62
    ?	63
    @	64
    A	65
    B	66
    C	67
    D	68
    E	69
    F	70
    G	71
    H	72
    I	73
    J	74
    K	75
    L	76
    M	77
    N	78
    O	79
    P	80
    Q	81
    R	82
    S	83
    T	84
    U	85
    V	86
    W	87
    X	88
    89	Y
    90	Z
    91	[
    92	\
    93	]
    94	^
    95	_
    96	`
    97	a
    98	b
    99	c
    100	d
    101	e
    102	f
    103	g
    104	h
    105	i
    106	j
    107	k
    108	l
    109	m
    110	n
    111	o
    112	p
    113	q
    114	r
    115	s
    116	t
    u	117
    v	118
    w	119
    x	120
    y	121
    z	122
    {	123
    |	124
    }	125
    ~	126
    Δ	127
    €	0128
    ‚	0130
    ƒ	0131
    „	0132
    …	0133
    †	0134
    ‡	0135
    ˆ	0136
    ‰	0137
    Š	0138
    ‹	0139
    Œ	0140
    Ž	0142
    ‘	0145
    0146	’
    0147	“
    0148	”
    0149	•
    0150	–
    0151	—
    0152	˜
    0153	™
    0154	š
    0155	›
    0156	œ
    0158	ž
    0159	Ÿ
    0160	 
    0161	¡
    0162	¢
    0163	£
    0164	¤
    0165	¥
    0166	¦
    0167	§
    0168	¨
    0169	©
    0170	ª
    0171	«
    0172	¬
    0173	­
    0174	®
    ¯	0175
    °	0176
    ±	0177
    ²	0178
    ³	0179
    ´	0180
    µ	0181
    ¶	0182
    ·	0183
    ¸	0184
    ¹	0185
    º	0186
    »	0187
    ¼	0188
    ½	0189
    ¾	0190
    ¿	0191
    À	0192
    Á	0193
    Â	0194
    Ã	0195
    Ä	0196
    Å	0197
    Æ	0198
    Ç	0199
    È	0200
    É	0201
    Ê	0202
    0203	Ë
    0204	Ì
    0205	Í
    0206	Î
    0207	Ï
    0208	Ð
    0209	Ñ
    0210	Ò
    0211	Ó
    0212	Ô
    0213	Õ
    0214	Ö
    0215	×
    0216	Ø
    0217	Ù
    0218	Ú
    0219	Û
    0220	Ü
    0221	Ý
    0222	Þ
    0223	ß
    0224	à
    0225	á
    0226	â
    0227	ã
    0228	ä
    0229	å
    æ	0230
    ç	0231
    è	0232
    é	0233
    ê	0234
    ë	0235
    ì	0236
    í	0237
    î	0238
    ï	0239
    ð	0240
    ñ	0241
    ò	0242
    ó	0243
    ô	0244
    õ	0245
    ö	0246
    ÷	0247
    ø	0248
    ù	0249
    ú	0250
    û	0251
    ü	0252
    ý	0253
    þ	0254
    ÿ	0255


    

    128	Ç
    129	ü
    130	é
    131	â
    132	ä
    133	à
    134	å
    135	ç
    136	ê
    137	ë
    138	è
    139	ï
    140	î
    141	ì
    142	Ä
    143	Å
    É	144
    æ	145
    Æ	146
    ô	147
    ö	148
    ò	149
    û	150
    ù	151
    ÿ	152
    Ö	153
    Ü	154
    ¢	155
    £	156
    ¥	157
    ₧	158
    ƒ	159
    160	á
    161	í
    162	ó
    163	ú
    164	ñ
    165	Ñ
    166	ª
    167	º
    168	¿
    169	⌐
    170	¬
    171	½
    172	¼
    173	¡
    174	«
    175	»
    ░	176
    ▒	177
    ▓	178
    │	179
    ┤	180
    ╡	181
    ╢	182
    ╖	183
    ╕	184
    ╣	185
    ║	186
    ╗	187
    ╝	188
    ╜	189
    ╛	190
    ┐	191
    192	└
    193	┴
    194	┬
    195	├
    196	─
    197	┼
    198	╞
    199	╟
    200	╚
    201	╔
    202	╩
    203	╦
    204	╠
    205	═
    206	╬
    207	╧
    ╨	208
    ╤	209
    ╥	210
    ╙	211
    ╘	212
    ╒	213
    ╓	214
    ╫	215
    ╪	216
    ┘	217
    ┌	218
    █	219
    ▄	220
    ▌	221
    ▐	222
    ▀	223
    224	α
    225	ß
    226	Γ
    227	π
    228	Σ
    229	σ
    230	µ
    231	τ
    232	Φ
    233	Θ
    234	Ω
    235	δ
    236	∞
    237	φ
    238	ε
    239	∩
    ≡	240
    ±	241
    ≥	242
    ≤	243
    ⌠	244
    ⌡	245
    ÷	246
    ≈	247
    °	248
    ∙	249
    ·	250
    √	251
    ⁿ	252
    ²	253
    ■	254
        255
    """

alphabet = ["A","B","C","D","E","F","G","H","I","J","K","L","M","N","Ñ","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","ñ","o","p","q","r","s","t","u","v","w","x","y","z","Á","É","Í","Ó","Ú","á","é","í","ó","ú","1","2","3","4","5","6","7","8","9",".",","," ","-","+","*","/","¿","?"]

string_2 = string.replace(chr(9),"").replace(chr(10),"").replace(" ","").replace("0", "").replace("1","").replace("2","").replace("3","").replace("4","").replace("5","").replace("6","").replace("7","").replace("8","").replace("9","")
counter = 1

long_alphabet =    ['☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼', '►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼', 'A', '"', '#', '$', 
'%', '&', "'", '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',
'V', 'W', 'X', 'Y', 'Z', '[', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}',
'~', 'Δ', '€', '‚', 'ƒ', '„', '…', '†', '‡', 'ˆ', '‰', 'Š', '‹', 'Œ', 'Ž', '‘', '’', '“', '”', '•', '–', '—', '˜', '™', 'š', '›', 'œ', 'ž', 'Ÿ', '¡', '¢', '£', '¤', '¥', '¦', '§', '¨', '©', 'ª',
'«', '¬', '®', '¯', '°', '±', '²', '³', '´', 'µ', '¶', '·', '¸', '¹', 'º', '»', '¼', '½', '¾', '¿', 'À', 'Á', 'Â', 'Ã', 'Ä', 'Å', 'Æ', 'Ç', 'È', 'É', 'Ê', 'Ë', 'Ì', 'Í', 'Î', 'Ï', 'Ð', 'Ñ', 'Ò',
'Ó', 'Ô', 'Õ', 'Ö', '×', 'Ø', 'Ù', 'Ú', 'Û', 'Ü', 'Ý', 'Þ', 'ß', 'à', 'á', 'â', 'ã', 'ä', 'å', 'æ', 'ç', 'è', 'é', 'ê', 'ë', 'ì', 'í', 'î', 'ï', 'ð', 'ñ', 'ò', 'ó', 'ô', 'õ', 'ö', '÷', 'ø', 'ù',
'ú', 'û', 'ü', 'ý', 'þ', 'ÿ', 'Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å', 'É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ', 'á',
'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»', '░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐', '└', '┴', '┬', '├', '─', '┼', '╞', '╟',
'╚', '╔', '╩', '╦', '╠', '═', '╬', '╧', '╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀', 'α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε',
'∩', '≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', '1', '2', '3', '4', '5', '6', '7', '8', '9', ' ']

long_alphabet = alphabet

_reflector_rotor_external = []
_reflector_rotor_internal = []
_len = len(long_alphabet)
_out = []
for letter in long_alphabet:
    print("letter: {}".format(letter))
    print(long_alphabet)
    if letter in str(_out): pass
    else:
        while True:
            random_number = randrange(len(long_alphabet) - 1)
            random_letter = long_alphabet[random_number]
            if random_letter in str(_out): pass
            else: break
        _out.append([letter, random_letter])
        long_alphabet.pop(long_alphabet.index(letter))
        try:
            long_alphabet.pop(long_alphabet.index(random_letter))
        except: print(letter + " has already poped")
    print("[{}, {}]".format(letter, random_letter))
    print(long_alphabet)
    print("\n")

# print(_out)
counter = 1
for pair in _out:
    print("{}: {}".format(counter, pair))
    counter += 1

print(len(_out))
print(_len)