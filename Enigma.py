from random import randrange

counter_invalid_letter = 0

encripted_letters = []

start_encript = []

# Set alphabet(82 letters). 

sources = []

alphabet =                  ['☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼', '►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼', 'A', '"', '#', '$', '%', '&', "'", '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 
'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', 'Δ', '€', 'ƒ', '„', '…', '†', '‡', '‰', 'Š', 'Œ', 'Ž', '‘', '’', '“', '”', '—', '™', 'š', 'œ', 'ž', 'Ÿ', '¡', '¢', '£', '¤', '¥', '¦', '¨', '©', 'ª', '«', '¬', '®', '¯', '°', '±', '²', '³', 'µ', '·', '¹', 'º', '»', '¼', '½', '¾', '¿', 'À', 'Á', 'Â', 'Ã', 'Ä', 'Æ', 'Ç', 'È', 'É', 'Ê', 'Ë', 'Ì', 'Í', 'Î', 'Ï', 'Ð', 'Ñ', 'Ò', 'Ó', 'Ô', 'Õ', 'Ö', 'Ø', 'Ù', 'Ú', 'Û', 'Ü', 'Ý', 'Þ', 'ß', 'à', 'á', 'â', 'ã', 'ä', 'å', 'æ', 'ç', 'è', 'é', 'ê', 'ë', 'ì', 'í', 'î', 'ï', 'ð', 'ñ', 'ò', 'ó', 'ô', 'õ', 'ö', '÷', 'ø', 'ù', 'ú', 'û', 'ü', 'ý', 'þ', 'ÿ', 'Å', '₧', '⌐', '░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐', '└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧', '╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀', 'Γ', 'π', 'Σ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩', '≡', '≥', '≤', '⌠', '⌡', '≈', '∙', '√', 'ⁿ', '■', '1', '2', '3', '4', '5', '6', '7', '8', '9', ' ']


_rotor_1_external =         ['%', '‡', 'A', '₧', '}', 'O', '╪', '¢', '▬', 'φ', '←', '¾', '╛', '¨', 'ž', '╦', 'Š', 'ô', 'â', 'v', '"', '▀', '├', '╒', 'È', 'Ò', '◙', 's', '╚', 'ñ', '║', '╕', '▓', '│', '“', '⌠', '≡', 'C', '▄', '6', 'ê', '⌡', '╢', 't', 'Ë', 'ä', 'ì', "'", 'š', '▼', '<', 'd', '‰', '®', 'ï', 'Æ', '↓', '=', 'u', '╙', '♦', 'ã', 'ý', '(', '`', '³', 'î', '8', 'Θ', '♫', 'Î', 'ß', '2', 'À', 'h', 'S', 'Z', '╖', 'k', '┼', '?', '½', 'q', 'É', 'Ž', 'z', '[', '@', ',', 
'”', 'G', 'P', '9', 'Ý', 'Ï', 'K', 'ç', '╓', '.', 'º', 'Ù', 'b', '²', '┬', '╔', '═', '▲', 'I', '╥', '╜', 'p', '♪', 'ø', 'i', '’', 'Ω', 'H', 'Ç', '{', 'w', '&', '→', 'τ', 'm', 'D', '┴', '♣', 'é', 'g', '╡', 'ë', 'û', '╨', '╞', '☼', '¯', 'n', 'E', '7', '╤', 'o', 'π', 'õ', '◄', '◘', 'N', 'í', '¡', '╫', '-', 'Õ', '>', 'Ó', 'ε', 'ÿ', '⌐', 'å', '♂', '╬', 'L', '┤', 'Δ', '↕', '™', '♥', '¬', 'F', '·', 'Σ', 'µ', 'Ü', 'ò', '☻', '¿', 'a', 'Ä', '‘', '§', '∟', 'Œ', '—', 'Û', '▌', 'Â', '…', '°', '█', ';', 'j', 'ƒ', '╩', 'V', '«', '»', 'Φ', '„', '○', 'Þ', '¥', '↑', ' ', 'J', 'R', '╠', '3', 'U', 'œ', 'B', 'ð', 'Á', 'ó', '∙', '*', 'Í', '±', 'y', '≤', '^', 'r', 'ö', '╗', 'δ', '╧', '∞', 'è', '╝', 'ú', '¦', 'á', 'c', '¤', '┘', 'æ', 'M', 'Ì', 'e', '─', 'T', '¼', '►', 'Ô', 'þ', '¶', '€', '÷', 'ù', '1', 'ü', '▒', '+', ']', '↔', '╣', '√', '┐', 'W', 'ª', '░', 'f', '5', '≥', '‼', 'Ê', 'X', 'Ÿ', ':', '~', '▐', '└', '☺', '■', '_', '©', 'Y', '╟', '♀', '4', '•', '|', 'ⁿ', 'Ö', '¹', '┌', '╘', 'Ú', ')', 'Å', 'Q', 'x', '£', 'Ø', '†', '/', 'Ñ', '∩', '↨', 'à', '$', 'Ã', '≈', 'Ð', 'l', '♠', 'Γ', '#']


_rotor_1_internal =         ['…', 'Å', '►', '‡', '¨', '♂', '↨', 'U', '←', '╞', 'g', '♪', 'i', '↓', '╝', '<', '¿', '☺', 'ž', '╢', '∞', 'ü', 'L', '└', 'c', 'À', 'ø', '┬', '≤', 'æ', 'φ', '┤', '☼', '¤', 'r', '▒', 's', '◘', '▀', 'ª', 'V', '†', 'N', '⌠', '“', 'u', '◙', '§', '[', 'Δ', '╪', '?', 'ç', '╥', '╦', 'Û', 'Þ', 'ß', '½', '╬', '╫', 'é', 'I', 'ã', ' ', 'G', 'F', 'ä', 'q', '¯', '═', 'S', '█', ':', 'º', '7', 'Ö', ';', 'þ', '→', '┐', 'á', '®', '3', '√', '‼', '&', 'Æ', '‘', 
'─', '¢', '▐', '▓', '║', '♥', 'ò', '♠', 'J', '©', '’', 'ƒ', 'Ž', 'B', 'ù', 'H', 'í', 'T', 'Y', 'ë', 'a', 'y', 'œ', '╧', 'C', 'å', '@', '.', 'Ü', '#', '€', '⌐', '╒', 'Ý', '≡', '≈', '1', 'Φ', '¦', 'X', '(', 'W', '♣', '¥', '╡', '▬', '┌', 'K', 'A', 'ÿ', '^', "'", '╚', '○', 'f', '³', 'ì', '╟', 'R', 'x', 'l', '°', '4', '╘', '—', 'ε', 'Ù', 't', '«', 'ð', 'Ð', '-', '»', 'e', '=', '│', '£', 'b', 'D', 'Ã', 'È', 'P', '{', 'Í', 'v', '░', 'p', '▲', ',', '♀', 'î', 'k', 'Ú', '¡', 'Â', 'Î', '∟', 'Š', ']', '☻', 'š', '╩', '"', 'à', 'è', '╤', '±', '╠', '÷', '}', '↑', 'Ê', '6', '¬', 'τ', '8', 'õ', 'Ø', '¾', 'Σ', 'O', '∙', 'Θ', '9', '╖', '♦', 'π', '`', '5', 'ê', '%', '╗', 'Γ', 'É', '╙', '╕', '┼', 'Ó', 'z', '_', '├', 'û', 'Q', '◄', '/', '♫', 'ú', '•', ')', '~', '■', '·', '¶', '╣', 'ô', '₧', '²', '|', 'M', '”', '┘', '╛', 'Ì', '╜', 'Ñ', 'ö', 'Œ', '*', 'o', 'w', 'Ò', '‰', 'δ', 'ñ', '$', 'Á', '„', 'Ç', '↔', 'µ', 'Ï', 'Ä', 'd', 'Ω', '▌', 'ý', 'm', '┴', '╔', '⌡', '¼', 'ï', 'Ô', '2', 'ó', '╓', 'Ÿ', '▼', 'E', 'Z', 'h', 'â', 'ⁿ', 'n', '>', '≥', '∩', '™', 'Õ', '+', '¹', '▄', 'Ë', '╨', 'j', '↕']


_rotor_2_external =         ['→', '€', 'ï', 'h', 'Å', '™', 'b', '▌', '∞', '≥', '⌡', 'Ω', 'Ü', 'œ', 'ó', 'W', '¨', '½', 'Õ', '‘', 'å', 'i', '└', 'ü', 'U', 'Φ', 's', 'δ', 'Î', '╪', '5', '‡', '7', '¡', 'Ð', 'Ñ', '▓', 'N', '│', 'ô', 'S', ',', '○', '^', 'É', '☼', '╗', 'a', 'º', '↑', 'u', 'Ÿ', 'Û', '‰', 'Ò', '%', '►', 'é', '╩', '„', 'w', '&', 'ª', '╔', 'f', 'V', '↕', '+', '=', '…', 'Ó', '[', '₧', '/', '³', 'ε', '1', '.', 'Δ', '3', '↨', '¿', 'ö', 'Í', '}', '╢', '≤', 'G', 'á', 
'?', 'È', ')', 'Ù', '•', 'Q', '*', '⌠', '¾', 'φ', '─', 'â', 'µ', 'ø', 'þ', 'l', '╖', 'M', '—', 'ⁿ', '▄', 'v', '╬', '§', 'Ž', '┐', '`', '◙', '>', 'ð', 'Ì', 'ƒ', '<', 'y', 'Ç', 'D', 'ë', '≡', '╫', 'R', '▐', 'L', '♥', 'Ô', '↓', '¼', 'J', '♦', '╓', 'π', '(', '╜', '↔', '”', 'Ê', '▀', '♣', 'Œ', '╤', '▬', 'E', '¢', 'p', '÷', 'Ë', 'ì', '╧', '√', 'C', 'Σ', '-', '»', ']', 'ñ', '¶', 'Š', 'r', '®', '╣', 'B', 'À', 'ß', 'ò', 'Æ', '♪', '£', '┌', '¥', 'ù', '2', 'ÿ', '@', '←', '╨', 'τ', 'q', '⌐', 'e', '◘', '╒', '▲', '┼', '☻', 't', '☺', 'd', '╠', '±', '¹', 'O', '·', '∩', "'", '∟', '¦', 'Â', 'F', '¬', '┬', 'û', '■', '╛', '╝', 'æ', 'I', '╕', 'Ý', 'í', '║', 'à', '{', '’', 'z', '░', '┤', 'î', 'ú', '♠', 'T', '♂', '_', '#', '°', '"', '‼', 'ý', '¤', '╦', '≈', '8', 'K', '²', '┘', '6', 'Á', '◄', '╘', '┴', '†', 'ã', 'è', 'o', '¯', ':', 'H', 'š', 'g', 'X', 'ç', 'Θ', '├', 'ä', '♫', '╡', 'Þ', '«', 'k', 'ž', '▼', '9', ' ', '═', '▒', 'Γ', '╙', 'Ú', ';', 'ê', '4', '|', '╥', '~', 'Ø', 'P', '$', '♀', '©', '╚', '╞', 'Ã', 'õ', 'c', '∙', 'A', 'n', 'Ï', 'x', 'Y', '█', 'j', 'Z', 'm', 'Ö', 'Ä', '“', '╟']


_rotor_2_internal =         ['█', 'È', 'Ü', '∙', '↕', 'þ', 'ñ', 'Δ', '╚', 'Å', '○', '♦', 'w', '┴', '¼', 'K', 'L', '£', 'W', 'Æ', '▼', '╧', '-', 'ê', 'δ', 'N', 'g', 'Þ', 'Σ', '”', 'Ä', '³', 'ž', '+', 'ß', '╞', '♫', '⌡', '▲', '═', '(', '{', 'à', 'ë', '<', '┌', '◙', '"', 'û', '™', '}', 'Î', 'ì', 'τ', '╢', '¶', 'Θ', ',', 'Á', 'Ô', 'P', 'r', 'Ω', '♂', 'µ', '¦', 'J', '├', '≤', 'i', 'Ó', '╗', '╨', 'n', 'ÿ', 'G', 'l', '▐', 'd', '3', '♥', '♪', 'Y', 'ò', 'é', '@', 'Œ', 'ð', '↓', 
'π', 'î', 'H', 'è', '½', 't', '`', '╫', 'p', 'Ç', ';', '₧', '↨', 'φ', '∩', '─', '⌐', '▄', 'É', '☼', 'F', 'ƒ', '♀', 'E', 'Ý', '2', 'I', '≈', '«', 'z', '[', 'y', '±', '5', 'T', '&', 'ä', 'Z', 'ù', 'œ', '⌠', 'j', 'ø', 'ý', 'ö', '←', 'D', 'Ê', 'ô', '╜', 'Ã', '╩', "'", '_', 'A', 'š', 'ú', '‡', '╔', 'Ø', 'Ë', '┤', '╕', 'í', '’', '•', '☺', 'ε', 'Â', '▓', '╖', '╓', '┐', '└', '┬', 'M', '¾', '¨', '=', '▌', '♣', '╘', '~', '╟', '◘', 'õ', '♠', '©', 'À', '·', 'C', 'o', '▬', '®', 'ï', '7', '╬', '╒', '€', '¯', '¿', '—', '%', '>', '¡', 'u', '≡', 'Š', 'ⁿ', '∟', '↔', 'Ÿ', '9', '┘', '╝', 'U', '8', '▒', 'c', ']', 's', '„', '?', '╛', '¥', 'B', 'Û', '^', '→', 'm', 'ã', 'ü', 'b', '╡', '$', 'e', '»', '6', 'Γ', 'ç', 'Ù', 'º', 'Ï', '╣', '¹', 'Ð', '4', '■', '╥', '►', '║', '√', 'Ì', '…', '▀', 'q', '“', 'Q', 'h', 'S', ':', '╪', '☻', 'Ò', '÷', '.', 'Ö', '†', 'Ú', '◄', 'Φ', '│', '┼', ')', 'ó', 'k', '∞', 'Õ', 'V', 'f', '¤', '‘', 'â', '↑', '╦', 'a', '‰', 'Ž', '°', 'Ñ', '²', '*', '|', '‼', '░', '╠', ' ', 'ª', 'R', 'v', '/', '¬', 'x', 'å', '╙', '1', '≥', '╤', 'á', '¢', 'O', '#', '§', 'X', 'Í', 'æ']


_rotor_reflector_external = ['☺', 'ƒ', '☻', '8', '♥', 'Ñ', '♦', '»', '♣', '|', '♠', '►', '•', 'm', '◘', 'Ð', '○', '◙', 'Å', '♂', 'ò', '♀', 'Ì', '♪', '¶', '♫', 'ⁿ', '☼', 'n', '◄', '„', '↕', '‰', '‼', 'õ', '§', 'Q', '▬', '╛', '↨', '_', '↑', 'O', '↓', 'q', '→', '«', '←', '╪', '∟', '↔', '─', '▲', '®', '▼', 'P', 'A', 'Ï', '"', '▐', '#', '¨', '$', 'o', '%', 't', '&', 'T', "'", 'Γ', '(', 'I', ')', '∩', '*', 'ð', '+', '┌', ',', '³', '-', 'w', '.', '°', '/', '╟', ':', '~', ';', 
'K', '<', '4', '=', 'D', '>', '”', '?', 'Δ', '@', '╔', 'B', '╫', 'C', 'æ', 'E', 'Ö', 'F', 'Ø', 'G', 'U', 'H', 'î', 'J', 'z', 'L', '£', 'M', ']', 'N', 'φ', 'R', '₧', 'S', '└', 'V', 'ú', 'W', 'º', 'X', 'x', 'Y', 'Z', '[', '≡', '^', 'ï', '`', '┬', 'a', 'ö', 'b', 'þ', 'c', 'Ò', 'd', '⌐', 'e', 'à', 'f', '÷', 'g', '╗', 'h', '╨', 'i', 'í', 'j', 'Œ', 'k', '¿', 'l', '™', 'p', '½', 'r', '¢', 's', ' ', 'u', '╕', 'v', '▒', 'y', '∙', '{', 'ε', '}', 'á', '€', 'Í', '…', 'œ', '†', 'ê', '‡', 'Ç', 'Š', '2', 'Ž', '≥', '‘', 'š', '’', '╬', '“', 'π', '—', '╧', 'ž', 'À', 'Ÿ', 'ü', '¡', 'é', '¤', '9', '¥', '╤', '¦', 'Ë', '©', 'Ω', 'ª', '±', '¬', '╡', '¯', '⌡', '²', 'è', 'µ', '¹', '·', '▌', '¼', '3', '¾', '≤', 'Á', '├', 'Â', '╘', 'Ã', 'Σ', 'Ä', 'â', 'Æ', 'ý', 'È', 'Φ', 'É', 'ä', 'Ê', 'Ù', 'Î', 'ó', 'Ó', '▄', 'Ô', 'Õ', 'Ú', 'Ý', 'Û', '╞', 'Ü', '░', 'Þ', '┼', 'ß', 'ã', 'å', '√', 'ç', '7', 'ë', 'δ', 'ì', 'û', 'ñ', 'ø', 'ô', '╒', 'ù', '≈', 'ÿ', '⌠', '▓', '│', '┤', '╢', '╖', 'Θ', '╣', '6', '║', '╝', '┴', '╜', '╙', '┐', '1', '╚', '╥', '╩', '╦', '╠', '═', '5', '╓', '▀', '┘', '■', '█', 'τ', '∞']


_rotor_reflector_internal = ['ƒ', '☺', '8', '☻', 'Ñ', '♥', '»', '♦', '|', '♣', '►', '♠', 'm', '•', 'Ð', '◘', '○', 'Å', '◙', 'ò', '♂', 'Ì', '♀', '¶', '♪', 'ⁿ', '♫', 'n', '☼', '„', '◄', '‰', '↕', 'õ', '‼', 'Q', '§', '╛', '▬', '_', '↨', 'O', '↑', 'q', '↓', '«', '→', '╪', '←', '∟', '─', '↔', '®', '▲', 'P', '▼', 'Ï', 'A', '▐', '"', '¨', '#', 'o', '$', 't', '%', 'T', '&', 'Γ', "'", 'I', '(', '∩', ')', 'ð', '*', '┌', '+', '³', ',', 'w', '-', '°', '.', '╟', '/', '~', ':', 'K', 
';', '4', '<', 'D', '=', '”', '>', 'Δ', '?', '╔', '@', '╫', 'B', 'æ', 'C', 'Ö', 'E', 'Ø', 'F', 'U', 'G', 'î', 'H', 'z', 'J', '£', 'L', ']', 'M', 'φ', 'N', '₧', 'R', '└', 'S', 'ú', 'V', 'º', 'W', 'x', 'X', 'Z', 'Y', '≡', '[', 'ï', '^', '┬', '`', 'ö', 'a', 'þ', 'b', 'Ò', 'c', '⌐', 'd', 'à', 'e', '÷', 'f', '╗', 'g', '╨', 'h', 'í', 'i', 'Œ', 'j', '¿', 'k', '™', 'l', '½', 'p', '¢', 'r', ' ', 's', '╕', 'u', '▒', 'v', '∙', 'y', 'ε', '{', 'á', '}', 'Í', '€', 'œ', '…', 'ê', '†', 'Ç', '‡', '2', 'Š', '≥', 'Ž', 'š', '‘', '╬', '’', 'π', '“', '╧', '—', 'À', 'ž', 'ü', 'Ÿ', 'é', '¡', '9', '¤', '╤', '¥', 'Ë', '¦', 'Ω', '©', '±', 'ª', '╡', '¬', '⌡', '¯', 'è', '²', '¹', 'µ', '▌', '·', '3', '¼', '≤', '¾', '├', 'Á', '╘', 'Â', 'Σ', 'Ã', 'â', 'Ä', 'ý', 'Æ', 'Φ', 'È', 'ä', 'É', 'Ù', 'Ê', 'ó', 'Î', '▄', 'Ó', 'Õ', 'Ô', 'Ý', 'Ú', '╞', 'Û', '░', 'Ü', '┼', 'Þ', 'ã', 'ß', '√', 'å', '7', 'ç', 'δ', 'ë', 'û', 'ì', 'ø', 'ñ', '╒', 'ô', '≈', 'ù', '⌠', 'ÿ', '│', '▓', '╢', '┤', 'Θ', '╖', '6', '╣', '║', '┴', '╝', '╙', '╜', '1', '┐', '╥', '╚', '╦', '╩', '╠', '5', '═', '▀', '╓', '■', '┘', 'τ', '█', '∞']


sources.append(alphabet)
sources.append(_rotor_1_external)
sources.append(_rotor_1_internal)
sources.append(_rotor_2_external)
sources.append(_rotor_2_internal)
sources.append(_rotor_reflector_external)
sources.append(_rotor_reflector_internal)

# Returns the letter that is in the posiiton of number in source.
def number_to_letter(source, number):
    return source[number]

# Returns the number of the position of letter in source.
def letter_to_number(source, letter):
    return source.index(letter)

def encript(message):
    rotors_position = []
    for k in range(int((len(sources) - 1)/2)): rotors_position.append(None)

    counter_for_position_rotors_input = 0


    # If the input has the initial letters of the rotors, remove them from the input and set them as the position of the rotors.
    if len(message) > (len(sources) - 1):
        for k in range(int(len(sources)/2)):
            k *= 2
            if message[k] in alphabet:
                counter_for_position_rotors_input += 1
            if message[k+1] == " ":
                counter_for_position_rotors_input += 1
        if counter_for_position_rotors_input == (len(sources)-1):
            
            for k in range(int(len(sources)/2)): rotors_position[k] = letter_to_number(letter=message[k*2], source=alphabet)
            message = message[(len(sources) - 1):len(message)]
            
        else:
            for k in range(int(len(sources)/2)): rotors_position[k] = randrange(len(alphabet)-1)
    else:
        for k in range(int(len(sources)/2)): rotors_position[k] = randrange(len(alphabet)-1)

    # Write the initial position of the rotors in _out.
    _out = ""
    # _out += number_to_letter(source=alphabet, number=rotors_position[0]) + " " + number_to_letter(source=alphabet, number=rotors_position[1]) + " " + number_to_letter(source=alphabet, number=rotors_position[2]) + " "
    
    for k in range(int(len(sources)/2)):
        _out += number_to_letter(source=alphabet, number=rotors_position[k]) + " "



    _max = len(alphabet) - 1
    _min = 0
    _add_substract = len(alphabet)

    # Encript each letter of the input one by one.
    for letter in message:
        if letter in alphabet:
            number = int(letter_to_number(source=alphabet, letter=letter))
            number -= rotors_position[0]
            number += 1

            if number > _max: number -= _add_substract
            elif number < _min: number += _add_substract

            for k in range(2):
                _position_add = rotors_position[k]
                _position_substract = rotors_position[k+1]
                k *= 2

                letter = number_to_letter(source=sources[k+1], number=number)
                
                number = int(letter_to_number(source=sources[k+2], letter=letter))
                number += _position_add
                number -= _position_substract

                if number > _max: number -= _add_substract
                elif number < _min: number += _add_substract

            letter = number_to_letter(source=sources[len(sources)-2], number=number)

            number = int(letter_to_number(source=sources[len(sources)-1], letter=letter))

            number += rotors_position[len(rotors_position)-1]
            number -= rotors_position[len(rotors_position)-2]

            if number > _max: number -= _add_substract
            elif number < _min: number += _add_substract

            for k in range(2, 0, -1):
                k -= 1
                _position_add = rotors_position[k]
                if k == 0:
                    _position_substract = 1

                else: _position_substract = rotors_position[k-1]

                k *= 2

                letter = number_to_letter(source=sources[k+2], number=number)
                
                number = int(letter_to_number(source=sources[k+1], letter=letter))
                number += _position_add
                number -= _position_substract

                if number > _max: number -= _add_substract
                elif number < _min: number += _add_substract

            _out += number_to_letter(source=alphabet, number=number)

        else: 
            print(letter + "is not in the alphabet")
        
        rotors_position[0] = rotors_position[0] + 1

        if rotors_position[0] == len(alphabet):
            rotors_position[0] = 0
            rotors_position[1] = rotors_position[1] + 1

        if rotors_position[1] == len(alphabet):
            rotors_position[1] = 0
            rotors_position[2] = rotors_position[2] + 1
            
        if rotors_position[2] == len(alphabet):
            rotors_position[2] = 0
        
    return _out

while True:
    _input = input("Enter message: ")
    message_encripted = encript(message=_input)
    print(message_encripted)
