from time import sleep
import threading
from random import randrange

print_all_variables = False

counter_invalid_letter = 0

encripted_letters = []

start_encript = []

# Set alphabet(82 letters). 

sources = []

alphabet =                  ('☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼', '►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼', 'A', '"', '#', '$', '%', '&', "'", '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', 'Δ', '€', '‚', 'ƒ', '„', '…', '†', '‡', 'ˆ', '‰', 'Š', '‹', 'Œ', 'Ž', '‘', '’', '“', '”', '–', '—', '˜', '™', 'š', '›', 'œ', 'ž', 'Ÿ', '¡', '¢', '£', '¤', '¥', '¦', '¨', '©', 'ª', '«', '¬', '®', '¯', '°', '±', '²', '³', '´', 'µ', '·', '¸', '¹', 'º', '»', '¼', '½', '¾', '¿', 'À', 'Á', 'Â', 'Ã', 'Ä', 'Æ', 'Ç', 'È', 'É', 'Ê', 'Ë', 'Ì', 'Í', 'Î', 'Ï', 'Ð', 'Ñ', 'Ò', 'Ó', 'Ô', 'Õ', 'Ö', '×', 'Ø', 'Ù', 'Ú', 'Û', 'Ü', 'Ý', 'Þ', 'ß', 'à', 'á', 'â', 'ã', 'ä', 'å', 'æ', 'ç', 'è', 'é', 'ê', 'ë', 'ì', 'í', 'î', 'ï', 'ð', 'ñ', 'ò', 'ó', 'ô', 'õ', 'ö', '÷', 'ø', 'ù', 'ú', 'û', 'ü', 'ý', 'þ', 'ÿ', 'Å', '₧', '⌐', '░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐', '└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧', '╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀', 'α', 'Γ', 'π', 'Σ', 'σ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩', '≡', '≥', '≤', '⌠', '⌡', '≈', '∙', '√', 'ⁿ', '■', '1', '2', '3', '4', '5', '6', '7', '8', '9', ' ')

_rotor_1_external =         ('#', 'S', 'X', 'π', '╩', 'R', 'ä', 'Ü', 'Ð', '╝', 'j', '▀', '╛', '€', '↨', '¬', '>', '►', '┐', 'ⁿ', 'Ÿ', 'd', 'f', 'õ', '╙', '╠', 'ì', 'W', 'n', '├', '₧', 'ë', '™', '╤', 'Δ', '5', 'Û', '♪', 'Ö', 'Ì', ':', 'ú', '*', '{', 'a', 'e', 'Ω', '○', '√', 'V', '+', '╓', 'D', '╦', 'œ', '⌐', 'Ž', 'ˆ', '╪', 'ö', 'O', 'ª', '£', 'u', 'ð', 'µ', 'º', 'b', 'š', 'î', 'ó', ',', 'å', 'ž', 'q', 'K', '×', '°', '╧', 'Î', '—', 's', '_', 'M', 'ε', '²', 'Γ', 'Ô', 'h', "'", '∙', 'ê', '☺', 'k', 'm', 'Ï', 'à', 'i', '▐', '@', '▼', 'J', 'Y', '╬', 'v', '╕', 'T', '◘', '$', 'Ù', '‹', '░', '`', '›', '┤', 'Ã', 'σ', '’', '┴', '▒', '‼', 'À', '÷', '¸', 'F', '∩', 'æ', 'Õ', '☼', 'Æ', '•', 'Œ', '.', '8', '↑', 'Í', '╟', '♣', 'H', '⌡', 'φ', 'þ', 'Ó', '%', 'Ú', 'Z', '▬', 'B', '∟', '´', '♥', '¶', 'g', '©', '|', 'ø', '‚', '®', 'U', '┘', 'A', 'z', '☻', '╫', '«', '⌠', '╗', 'E', '¤', '▄', '═', '/', '¨', '¿', '6', '·', 'r', '◙', 'ç', '9', '╨', '‘', '[', '▓', '│', 'C', '▌', '♀', 'Ò', '╖', 'δ', 'Â', 'G', 'ý', '(', '2', '∞', '¹', 'ò', 'Ë', '¢', 'y', '"', '}', '↔', '–', '╥', 'ƒ', '7', '4', 'Ñ', '„', 'Þ', '←', '½', 'Q', 'ü', '¯', '†', '¦', '3', '╜', '◄', '…', 'L', '↓', '^', 'P', '¡', 'û', ' ', 'w', '→', 'Ý', 'c', '╘', '╚', 'Σ', 'é', '♦', '”', '&', 'â', '<', '┬', 'o', '╡', '“', '≤', 'ÿ', '♠', 't', '‰', 'ß', 'È', 'í', '┌', ')', 'Ê', 'l', '³', '1', '♫', 'Ç', '║', '≈', 'Á', 'É', 'α', 'ï', '±', '╣', '¥', 'ô', 'N', '█', '»', '↕', 'Å', '?', ';', '└', '♂', 'ã', 'è', '˜', '§', '┼', '╞', 'á', 'I', '≡', '╔', '─', 'Θ', 'Ø', '¾', 'Φ', '-', '‡', ']', 'τ', 'Ä', 'ù', '~', '¼', '╒', '=', 'ñ', '╢', 'p', '■', '▲', 'x', '≥', 'Š')
_rotor_1_internal =         ('ú', 'µ', 'y', '¨', 'í', '€', '6', '↨', '╩', '¢', '■', '&', 'f', '╢', '‡', '─', '¤', '@', '▲', '√', '¼', 'è', 'Œ', '»', '–', '₧', '{', 'ð', 'ö', '░', 'o', 'ⁿ', '1', ']', '¦', 'ñ', '5', '╛', 'Ö', 'Ñ', '2', '►', 'ß', '▓', '↑', 'ü', '´', '®', 'Ω', '∞', '‹', 'Q', '†', 'S', '┬', '┴', 'Ç', 'Ê', 'û', '║', ';', '╡', 'L', '-', '≥', 'Á', 'Õ', 'W', 'G', '↕', '*', 'g', '#', 'Ë', 'À', 'B', 'w', 'º', 'v', 'D', '=', '┌', '×', '▌', '╧', '◘', '[', 'd', 'K', '∩', '♀', '█', 'I', '„', 'Ù', '¹', '◄', 'X', '│', '⌐', '<', '♦', '⌠', 'ã', '3', '_', 'E', '·', 'ƒ', '╨', '(', '├', '7', '→', 'ˆ', '♫', '▄', 'δ', '☻', '/', 'p', 'ù', 'z', '§', '+', 'ô', '♂', '╥', 'A', 'Î', 'α', '╤', '╒', '°', 'Ô', 'õ', 'Ì', '?', '©', '♠', '9', '☼', '½', 'H', 't', 'V', 'ê', '²', '‘', '%', '¶', '>', 'Ý', '╓', 'Ü', '∙', '›', 'O', 'Ž', '“', 'ï', '≡', "'", '┐', '¿', 'Δ', '╗', '"', '¬', '«', '♥', '♪', '≈', 'È', '}', 'ý', '╟', 'k', 'î', 'ä', '’', 'φ', '╬', '╔', 'ó', 'Í', 'å', '³', 'Â', 'æ', 'a', '▐', 'ì', '↓', 'Æ', 'Γ', '”', '¸', '¯', 'j', 'Θ', 'ž', 'C', '╪', '‼', 'Ä', 'Y', 'U', 'Û', '$', '4', 'â', 'σ', '˜', '‰', ':', '÷', 'c', '.', 'N', 'b', 'Þ', 'Ï', ',', 'u', '—', 's', '♣', ' ', '┼', '╙', 'š', 'J', 'Ð', 'œ', '~', '‚', '⌡', '═', '┘', '☺', '╞', '◙', '↔', '▼', 'q', 'ÿ', '╦', '┤', '╘', 'Š', '╫', 'e', '≤', 'M', '▒', 'þ', 'á', 'i', '╝', 'Z', '`', 'R', 'Σ', '…', 'τ', 'T', 'x', '╕', '¡', 'Ø', '±', '|', 'Ÿ', 'l', 'à', '╖', 'ò', '¾', '╣', '╜', ')', '○', 'É', '8', '™', 'P', '¥', '^', 'F', 'π', '←', 'n', '╚', '▀', 'Ó', 'r', 'Ò', 'ª', '└', 'ε', '£', 'h', '•', 'Φ', '╠', 'ø', 'ë', '∟', '▬', 'Ú', 'é', 'Å', 'ç', 'Ã', 'm')

_rotor_2_external =         ('φ', 'R', '†', 'L', '‘', 'J', 'í', '►', '↕', '7', '1', 'ª', '▓', '♥', 'O', '=', '←', '/', 'Û', 'Ý', '^', 'τ', '«', '╧', '‰', '¼', 'ï', 'c', '▒', '·', 'N', '&', 'ë', 'Γ', '`', '"', 'Σ', '“', '±', 'Ê', 'ⁿ', 'M', '{', '╩', 'é', 'C', '’', '„', '$', '≡', '×', 'd', '┼', '5', 'Z', 's', '╫', '┐', 'j', '£', '▲', 'D', 'A', '╢', 'Ç', '⌡', 'ý', 'P', 'Φ', 'h', 'å', '╝', '█', 'Ë', 'ð', '¿', '›', 'ÿ', '│', 'ã', 'x', '¾', '↑', 'Ä', 'f', 'v', 'È', 'k', 'µ', 'α', 'Ÿ', '+', '♪', 'É', 'ø', 'Δ', 'ù', 'Ω', '?', 'a', '‡', 'σ', '(', 'r', '╓', 'q', '°', '◄', '√', 'ò', '»', '¹', '…', '╬', '—', '╠', '≤', 'ˆ', '▼', '└', '‹', '┌', 'è', '|', 'F', '♠', '╒', 'ε', '‼', 'm', '9', '<', '½', '☻', ' ', '§', 'á', 'û', 'Ï', 'Ò', 'S', '┘', '↨', '¯', 'b', 'X', '₧', 'V', '╤', '╖', '–', '├', '╙', '▐', '↓', '♂', 'Θ', '€', 'â', '²', '╘', '∙', 'δ', '¬', '╔', '╨', 'ô', '╜', '▄', '○', 'ó', '╡', '}', 'õ', '_', 'H', '~', '¦', 'ß', 'î', 'B', 'Ö', '╦', 'æ', '4', '3', '¨', 'Ã', '╚', 'ú', '∞', 'Š', 'À', 'Ì', '♫', '♀', 'Ð', 'Ø', '■', '÷', 'ö', 'ñ', '”', '⌐', 'U', '╟', ']', '´', 'π', '³', '-', '∟', 'W', '™', '┬', '╥', 'ä', 'Å', '≥', 'Î', 'Þ', 'y', 'ì', '*', '╕', '∩', 'Í', 'g', '─', '☼', 'þ', 'à', ':', '⌠', '┴', '♦', '¤', 'ƒ', '‚', '╗', 'i', ',', 'Â', 'Ú', '#', 'T', 'ç', 'o', 'ž', '┤', 'Y', 'p', 'Õ', 'ü', '¢', '@', '¥', 'Ó', 'Ü', '░', 'Æ', ';', '>', '═', 'G', 'Ù', 'z', '[', '≈', 'œ', 'u', 'š', '˜', '╪', '¡', '◘', '®', ')', '╣', '♣', "'", 'n', 'Q', '▀', '▬', 'E', 'Œ', '2', '.', '6', 'I', 'ê', '•', 'K', 'Ñ', '→', 'e', '☺', 't', '¸', 'Á', '%', '║', 'º', '╞', 'Ô', '©', 'w', '¶', 'l', 'Ž', '◙', '▌', '↔', '8', '╛')
_rotor_2_internal =         ('p', '¸', '╚', '?', "'", '3', 'Â', '³', '♫', 'm', '☼', ',', 'Ó', '§', '┘', '╠', 'π', '“', 'Γ', 'ÿ', 'K', 'α', '└', '♪', '╔', 'ã', 'g', 'ý', 'ƒ', '♠', '®', 'u', 'è', 'R', 'ô', '♀', '¯', '|', '↔', '∩', 't', 'r', '╦', 'n', 'ù', 'Æ', '╜', '▲', '+', '²', '¹', 'U', 'Q', 'Ý', 'H', 'ò', 'x', 'Ž', 'B', 'Z', 'Þ', '⌠', '╙', '°', '┴', 'Φ', '8', '─', '╨', '¶', '←', 'I', 'j', '╢', 'Ù', '_', '♂', 'ú', '`', 'Û', '•', '■', 'Ñ', 'œ', '∞', '/', '}', ':', '┌', '╒', '´', 'ø', '’', 'ž', '$', ';', '╥', '┐', '1', 'å', 'E', '6', 'Î', 'k', '◄', 'î', '%', 'Ô', 'µ', '€', 'Ä', '2', '╤', 'â', 'š', 'D', '±', '‼', 'q', 'ß', 'ˆ', '‡', '╝', 'Ì', 'Ò', 'ö', '^', '»', '═', '4', 'W', '→', 'ⁿ', 'Ü', '╡', '►', 'C', 'Å', 'È', '¡', 'V', '9', '"', '│', 'G', '<', '▐', 'ε', '√', '”', '▌', 'Ø', 'Θ', 'A', '=', '£', 'M', '├', 'Õ', 'ï', 'c', '♦', 'æ', '╟', 'J', '◙', 'ë', '*', 'Ω', 'ñ', 'Œ', 'ª', 'Ã', '†', '¨', '¦', 'l', '╗', '≥', 'ð', '>', '⌐', '·', '╫', 'Š', '▓', '○', 'e', ']', 'ì', 'þ', '∙', '♣', 'Ê', '▄', '┤', 'a', '║', 'i', 'z', '◘', '≡', '¥', 'º', 'v', 'ó', '↨', '„', '╓', '–', 'Δ', 'h', 'f', 'Ë', 'û', '‹', 'O', '┼', ' ', '¢', 'P', '▼', 'Y', '♥', 'o', '.', '░', '¤', 'ç', '↓', 'δ', '╪', '-', '›', '∟', '¿', 'õ', 'φ', 'L', 'd', '½', '¾', 'F', '¼', '¬', 'τ', '@', 'á', 'w', 'à', '&', 'Ç', '—', 'y', 'Σ', '#', 'Ð', '(', '5', '╬', '█', '7', '▬', '▒', '☺', 's', '☻', '≤', 'ä', '┬', '╞', 'ê', 'Ú', 'Á', 'T', 'X', '₧', '╕', 'Í', '{', '‘', '÷', 'b', '‚', '╩', 'N', '╘', '[', '˜', '~', '▀', 'É', 'σ', '╛', 'ü', '™', '↕', '↑', '×', '«', '‰', '≈', 'S', '╖', 'À', 'é', 'Ï', '⌡', 'í', ')', '…', '╧', 'Ö', '©', '╣', 'Ÿ')

_rotor_reflector_external = ('☺', 'º', '☻', '╡', '♥', 'ó', '♦', '√', '♣', '╢', '♠', '┌', '•', '▒', '◘', 'a', '○', 'k', '◙', '3', '♂', '∞', '♀', '╦', '♪', 'À', '♫', 'è', '☼', 'î', '►', 'Ú', '◄', '<', '↕', '┼', '‼', 'ß', '¶', 'ë', '§', '░', '▬', 'Q', '↨', 'Ÿ', '↑', ' ', '↓', '╒', '→', 'Φ', '←', 'Ü', '∟', '▲', '↔', '?', '▼', '⌠', 'A', 'X', '"', 'o', '#', '{', '$', 'F', '%', 'y', '&', 'δ', "'", 'ž', '(', 'þ', ')', 'Ç', '*', 'œ', '+', '9', ',', '═', '-', '›', '.', 'Æ', '/', 'Á', ':', ';', '¯', '=', 'Z', '>', '³', '@', 'P', 'B', '´', 'C', '¥', 'D', '8', 'E', 'm', 'G', '~', 'H', '╘', 'I', '†', 'J', '∩', 'K', '„', 'L', 'v', 'M', 'π', 'N', 'ý', 'O', 'n', 'R', '≥', 'S', '5', 'T', 'w', 'U', '^', 'V', '|', 'W', '»', 'Y', '▌', '[', 'φ', ']', '■', '_', '”', '`', '│', 'b', '‰', 'c', 'Ï', 'd', 'Ó', 'e', 'È', 'f', 'ü', 'g', 'õ', 'h', '█', 'i', '╜', 'j', '╓', 'l', '╕', 'p', '├', 'q', 'Ñ', 'r', '±', 's', '╙', 't', 'ˆ', 'u', 'â', 'x', '4', 'z', 'á', '}', '≈', 'Δ', 'Å', '€', 'ç', '‚', 'Í', 'ƒ', 'τ', '…', 'ð', '‡', '╩', 'Š', '¸', '‹', '╧', 'Œ', 'Õ', 'Ž', '└', '‘', 'Þ', '’', '∙', '“', '×', '–', 'Ò', '—', '©', '˜', 'í', '™', '╤', 'š', '¼', '¡', '╛', '¢', 'Θ', '£', '¾', '¤', '┘', '¦', 'Ø', '¨', '║', 'ª', 'ø', '«', 'æ', '¬', 'Ð', '®', '6', '°', 'ê', '²', 'Ô', 'µ', 'Ù', '·', 'ⁿ', '¹', 'Ê', '½', '╝', '¿', '┬', 'Â', '▓', 'Ã', 'ò', 'Ä', 'É', 'Ë', 'ε', 'Ì', '┐', 'Î', '1', 'Ö', '╠', 'Û', '╣', 'Ý', '⌐', 'à', '╔', 'ã', 'ù', 'ä', '╥', 'å', 'ï', 'é', 'σ', 'ì', '╖', 'ñ', '≡', 'ô', 'û', 'ö', '╫', '÷', '7', 'ú', '╟', 'ÿ', 'Σ', '₧', '▀', '┤', '▄', '╗', '─', '┴', 'Ω', '╞', '╪', '╚', '▐', '╬', '╨', '2', 'α', 'Γ', '≤', '⌡')
_rotor_reflector_internal = ('º', '☺', '╡', '☻', 'ó', '♥', '√', '♦', '╢', '♣', '┌', '♠', '▒', '•', 'a', '◘', 'k', '○', '3', '◙', '∞', '♂', '╦', '♀', 'À', '♪', 'è', '♫', 'î', '☼', 'Ú', '►', '<', '◄', '┼', '↕', 'ß', '‼', 'ë', '¶', '░', '§', 'Q', '▬', 'Ÿ', '↨', ' ', '↑', '╒', '↓', 'Φ', '→', 'Ü', '←', '▲', '∟', '?', '↔', '⌠', '▼', 'X', 'A', 'o', '"', '{', '#', 'F', '$', 'y', '%', 'δ', '&', 'ž', "'", 'þ', '(', 'Ç', ')', 'œ', '*', '9', '+', '═', ',', '›', '-', 'Æ', '.', 'Á', '/', ':', '¯', ';', 'Z', '=', '³', '>', 'P', '@', '´', 'B', '¥', 'C', '8', 'D', 'm', 'E', '~', 'G', '╘', 'H', '†', 'I', '∩', 'J', '„', 'K', 'v', 'L', 'π', 'M', 'ý', 'N', 'n', 'O', '≥', 'R', '5', 'S', 'w', 'T', '^', 'U', '|', 'V', '»', 'W', '▌', 'Y', 'φ', '[', '■', ']', '”', '_', '│', '`', '‰', 'b', 'Ï', 'c', 'Ó', 'd', 'È', 'e', 'ü', 'f', 'õ', 'g', '█', 'h', '╜', 'i', '╓', 'j', '╕', 'l', '├', 'p', 'Ñ', 'q', '±', 'r', '╙', 's', 'ˆ', 't', 'â', 'u', '4', 'x', 'á', 'z', '≈', '}', 'Å', 'Δ', 'ç', '€', 'Í', '‚', 'τ', 'ƒ', 'ð', '…', '╩', '‡', '¸', 'Š', '╧', '‹', 'Õ', 'Œ', '└', 'Ž', 'Þ', '‘', '∙', '’', '×', '“', 'Ò', '–', '©', '—', 'í', '˜', '╤', '™', '¼', 'š', '╛', '¡', 'Θ', '¢', '¾', '£', '┘', '¤', 'Ø', '¦', '║', '¨', 'ø', 'ª', 'æ', '«', 'Ð', '¬', '6', '®', 'ê', '°', 'Ô', '²', 'Ù', 'µ', 'ⁿ', '·', 'Ê', '¹', '╝', '½', '┬', '¿', '▓', 'Â', 'ò', 'Ã', 'É', 'Ä', 'ε', 'Ë', '┐', 'Ì', '1', 'Î', '╠', 'Ö', '╣', 'Û', '⌐', 'Ý', '╔', 'à', 'ù', 'ã', '╥', 'ä', 'ï', 'å', 'σ', 'é', '╖', 'ì', '≡', 'ñ', 'û', 'ô', '╫', 'ö', '7', '÷', '╟', 'ú', 'Σ', 'ÿ', '▀', '₧', '▄', '┤', '─', '╗', 'Ω', '┴', '╪', '╞', '▐', '╚', '╬', '2', '╨', 'α', 'Γ', '⌡', '≤')

sources.append(alphabet)

sources.append(_rotor_1_external)
sources.append(_rotor_1_internal)

sources.append(_rotor_2_external)
sources.append(_rotor_2_internal)

sources.append(_rotor_reflector_external)
sources.append(_rotor_reflector_internal)

# Returns the letter that is in the posiiton of number in source.
def number_to_letter(source, number):
    return source[number]

# Returns the number of the position of letter in source.
def letter_to_number(source, letter):
    return source.index(letter)

def encript(message):
    rotors_position = []
    for k in range(int((len(sources) - 1)/2)): rotors_position.append(None)

    counter_for_position_rotors_input = 0


    # If the input has the initial letters of the rotors, remove them from the input and set them as the position of the rotors.
    if len(message) > (len(sources) - 1):
        for k in range(int(len(sources)/2)):
            k *= 2
            if message[k] in alphabet:
                counter_for_position_rotors_input += 1
            if message[k+1] == " ":
                counter_for_position_rotors_input += 1
        if counter_for_position_rotors_input == (len(sources)-1):
            
            for k in range(int(len(sources)/2)): rotors_position[k] = letter_to_number(letter=message[k*2], source=alphabet)
            message = message[(len(sources) - 1):len(message)]
            
        else:
            for k in range(int(len(sources)/2)): rotors_position[k] = randrange(len(alphabet)-1)
    else:
        for k in range(int(len(sources)/2)): rotors_position[k] = randrange(len(alphabet)-1)

    # Write the initial position of the rotors in _out.
    _out = ""
    # _out += number_to_letter(source=alphabet, number=rotors_position[0]) + " " + number_to_letter(source=alphabet, number=rotors_position[1]) + " " + number_to_letter(source=alphabet, number=rotors_position[2]) + " "
    
    for k in range(int(len(sources)/2)):
        _out += number_to_letter(source=alphabet, number=rotors_position[k]) + " "



    _max = len(alphabet) - 1
    _min = 0
    _add_substract = len(alphabet)

    # Encript each letter of the input one by one.
    for letter in message:
        if letter in alphabet:
            number = int(letter_to_number(source=alphabet, letter=letter))
            number -= rotors_position[0]
            number += 1

            if number > _max: number -= _add_substract
            elif number < _min: number += _add_substract

            for k in range(2):
                _position_add = rotors_position[k]
                _position_substract = rotors_position[k+1]
                k *= 2

                letter = number_to_letter(source=sources[k+1], number=number)
                
                number = int(letter_to_number(source=sources[k+2], letter=letter))
                number += _position_add
                number -= _position_substract

                if number > _max: number -= _add_substract
                elif number < _min: number += _add_substract

            letter = number_to_letter(source=sources[len(sources)-2], number=number)

            number = int(letter_to_number(source=sources[len(sources)-1], letter=letter))

            number += rotors_position[len(rotors_position)-1]
            number -= rotors_position[len(rotors_position)-2]

            if number > _max: number -= _add_substract
            elif number < _min: number += _add_substract

            for k in range(2, 0, -1):
                k -= 1
                _position_add = rotors_position[k]
                if k == 0:
                    _position_substract = 1

                else: _position_substract = rotors_position[k-1]

                k *= 2

                letter = number_to_letter(source=sources[k+2], number=number)
                
                number = int(letter_to_number(source=sources[k+1], letter=letter))
                number += _position_add
                number -= _position_substract

                if number > _max: number -= _add_substract
                elif number < _min: number += _add_substract

            _out += number_to_letter(source=alphabet, number=number)

        else: 
            print(letter + "is not in the alphabet")
        
        rotors_position[0] = rotors_position[0] + 1

        if rotors_position[0] == len(alphabet):
            rotors_position[0] = 1
            rotors_position[1] = rotors_position[1] + 1

        if rotors_position[1] == len(alphabet):
            rotors_position[1] = 1
            rotors_position[2] = rotors_position[2] + 1
            
        if rotors_position[2] == len(alphabet):
            rotors_position[2] = 1
        
    return _out

while True:
    _input = input("Enter message: ")
    message_encripted = encript(message=_input)
    print(message_encripted)
